{
  "openapi": "3.0.1",
  "info": {
    "title": "OpenAPI definition",
    "version": "v0"
  },
  "servers": [
    {
      "url": "http://localhost:8085",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Debtor Positions API"
    }
  ],
  "paths": {
    "/organizations/{organizationfiscalcode}/debtpositions": {
      "post": {
        "tags": [
          "Debtor Positions API"
        ],
        "summary": "The Organization creates a Debt Position ",
        "operationId": "createPosition",
        "parameters": [
          {
            "name": "organizationfiscalcode",
            "in": "path",
            "description": "Organization fiscal code, the fiscal code of the Organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DebtorDTO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "409": {
            "description": "Conflict: duplicate request found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            }
          },
          "201": {
            "description": "Request created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Malformed request.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            }
          },
          "401": {
            "description": "Wrong or missing function key."
          },
          "500": {
            "description": "Service unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            }
          }
        }
      }
    },
    "/organizations/{organizationfiscalcode}/debtpositions/{iupd}": {
      "get": {
        "tags": [
          "Debtor Positions API"
        ],
        "summary": "Return the details of a specific debt position. ",
        "operationId": "getPositionByNoticeNumber",
        "parameters": [
          {
            "name": "organizationfiscalcode",
            "in": "path",
            "description": "Organization fiscal code, the fiscal code of the Organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "iupd",
            "in": "path",
            "description": "IUPD (Unique identifier of the debt position). Format could be `<Organization fiscal code + UUID>` this would make it unique within the new PD management system. It's the responsibility of the EC to guarantee uniqueness. The pagoPa system shall verify that this is `true` and if not, notify the EC.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Obtained payment position details.",
            "content": {
              "application/json": {}
            }
          },
          "404": {
            "description": "No payment found.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            }
          },
          "401": {
            "description": "Wrong or missing function key."
          },
          "500": {
            "description": "Service unavailable.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemJson"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "base-controller"
        ],
        "operationId": "heartBeat",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "DebtorDTO": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "F",
              "G"
            ]
          },
          "fiscalCode": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "streetName": {
            "type": "string"
          },
          "civicNumber": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "province": {
            "type": "string"
          },
          "region": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          },
          "paymentPosition": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentPositionDTO"
            }
          }
        }
      },
      "PaymentOptionDTO": {
        "type": "object",
        "properties": {
          "iuv": {
            "type": "string"
          },
          "organizationFiscalCode": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "description": {
            "type": "string"
          },
          "isPartialPayment": {
            "type": "boolean"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "retentionDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentDate": {
            "type": "string",
            "format": "date-time"
          },
          "reportingDate": {
            "type": "string",
            "format": "date-time"
          },
          "paymentMethod": {
            "type": "string"
          },
          "fee": {
            "type": "integer",
            "format": "int64"
          },
          "pspCompany": {
            "type": "string"
          },
          "idReceipt": {
            "type": "string"
          },
          "idFlowReporting": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "PO_UNPAID",
              "PO_PAID",
              "PO_PARTIALLY_REPORTED",
              "PO_REPORTED"
            ]
          },
          "transfer": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransferDTO"
            }
          }
        }
      },
      "PaymentPositionDTO": {
        "type": "object",
        "properties": {
          "iupd": {
            "type": "string"
          },
          "organizationFiscalCode": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "officeName": {
            "type": "string"
          },
          "insertedDate": {
            "type": "string",
            "format": "date-time"
          },
          "publishDate": {
            "type": "string",
            "format": "date-time"
          },
          "validityDate": {
            "type": "string",
            "format": "date-time"
          },
          "status": {
            "type": "string",
            "enum": [
              "DRAFT",
              "PUBLISHED",
              "VALID",
              "INVALID",
              "EXPIRED",
              "PARTIALLY_PAID",
              "PAID",
              "PARTIALLY_REPORTED",
              "REPORTED"
            ]
          },
          "paymentOption": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentOptionDTO"
            }
          }
        }
      },
      "TransferDTO": {
        "type": "object",
        "properties": {
          "organizationFiscalCode": {
            "type": "string"
          },
          "idTransfer": {
            "type": "string"
          },
          "amount": {
            "type": "integer",
            "format": "int64"
          },
          "remittanceInformation": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "iban": {
            "type": "string"
          },
          "postalIban": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "T_UNREPORTED",
              "T_REPORTED"
            ]
          }
        }
      },
      "ProblemJson": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "description": "A short, summary of the problem type. Written in english and readable for engineers (usually not suited for non technical stakeholders and not localized); example: Service Unavailable"
          },
          "status": {
            "maximum": 600,
            "minimum": 100,
            "type": "integer",
            "description": "The HTTP status code generated by the origin server for this occurrence of the problem.",
            "format": "int32",
            "example": 200
          },
          "detail": {
            "type": "string",
            "description": "A human readable explanation specific to this occurrence of the problem.",
            "example": "There was an error processing the request"
          }
        }
      }
    }
  }
}